<?xml version="1.0" encoding="UTF-8"?>
<project name="module_runtime" default="compile.module.runtime">
  <dirname property="module.runtime.basedir" file="${ant.file.module_runtime}"/>
  
  <property name="module.jdk.home.runtime" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.runtime" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.runtime" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.runtime" value="-encoding UTF-8 -source 8 -target 8 ${compiler.args}"/>
  
  <property name="runtime.output.dir" value="${module.runtime.basedir}/../../build/production/runtime"/>
  <property name="runtime.testoutput.dir" value="${module.runtime.basedir}/../../build/test/runtime"/>
  
  <path id="runtime.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="runtime.module.production.classpath">
    <path refid="${module.jdk.classpath.runtime}"/>
    <pathelement location="${launcher.output.dir}"/>
  </path>
  
  <path id="runtime.runtime.production.module.classpath">
    <pathelement location="${launcher.output.dir}"/>
    <path refid="library.org.fusesource.jansi:jansi:1.11.classpath"/>
    <path refid="library.com.eclipsesource.minimal-json:minimal-json:0.9.4.classpath"/>
    <pathelement location="${runtime.output.dir}"/>
  </path>
  
  <path id="runtime.module.classpath">
    <path refid="${module.jdk.classpath.runtime}"/>
    <pathelement location="${launcher.testoutput.dir}"/>
    <pathelement location="${launcher.output.dir}"/>
    <pathelement location="${runtime.output.dir}"/>
  </path>
  
  <path id="runtime.runtime.module.classpath">
    <pathelement location="${launcher.testoutput.dir}"/>
    <pathelement location="${launcher.output.dir}"/>
    <path refid="library.org.fusesource.jansi:jansi:1.11.classpath"/>
    <path refid="library.com.eclipsesource.minimal-json:minimal-json:0.9.4.classpath"/>
    <pathelement location="${runtime.testoutput.dir}"/>
    <pathelement location="${runtime.output.dir}"/>
  </path>
  
  
  <patternset id="excluded.from.module.runtime">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.runtime">
    <patternset refid="excluded.from.module.runtime"/>
  </patternset>
  
  <path id="runtime.module.sourcepath">
    <dirset dir="${module.runtime.basedir}">
      <include name="source"/>
      <include name="resources"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.runtime" depends="compile.module.runtime.production,compile.module.runtime.tests" description="Compile module runtime"/>
  
  <target name="compile.module.runtime.production" depends="compile.module.launcher" description="Compile module runtime; production classes">
    <mkdir dir="${runtime.output.dir}"/>
    <javac destdir="${runtime.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.runtime}/javac">
      <compilerarg line="${compiler.args.runtime}"/>
      <bootclasspath refid="runtime.module.bootclasspath"/>
      <classpath refid="runtime.module.production.classpath"/>
      <src refid="runtime.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.runtime"/>
    </javac>
    
    <copy todir="${runtime.output.dir}/launcher/runtime">
      <fileset dir="${module.runtime.basedir}/source">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
    <copy todir="${runtime.output.dir}">
      <fileset dir="${module.runtime.basedir}/resources">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.runtime.tests" depends="compile.module.runtime.production" description="compile module runtime; test classes" unless="skip.tests"/>
  
  <target name="clean.module.runtime" description="cleanup module">
    <delete dir="${runtime.output.dir}"/>
    <delete dir="${runtime.testoutput.dir}"/>
  </target>
</project>